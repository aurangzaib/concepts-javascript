/*

 Description:
 Array
 
 Modifications:
 ---------------------------------------------------------------------------------------
 Date      Vers.  Comment                                                     Name
 ---------------------------------------------------------------------------------------
 21.07.13  01.00  Created												      Siddiqui
 06.11.23  02.00  Updated                                                     Siddiqui
 ---------------------------------------------------------------------------------------

*/

// ==========================================================================================================
// Notes
// ==========================================================================================================

/*
- Array:           Dynamic size
- Sparse array:    Array where some elements are not defined
- Push/Pop/Shift:  Changes array with index update
- Delete:          Changes array without index update
*/

"use strict"

// ==========================================================================================================
// Create
// ==========================================================================================================
let arr1 = [1, 2, 3.2, "4"];            // Literal Syntax
let arr2 = new Array(1, 2, 3.2, "4");   // Constructor Syntax - Recommended
let arr3 = new Array(5);                // Sparse array of length=5
let arr4 = [() => console.log(1)];      // Function elements
arr4[0]();

// ==========================================================================================================
// Constant / Freeze
// ==========================================================================================================
Array.freeze(arr1);

// ==========================================================================================================
// Access
// ==========================================================================================================
arr2[1];

// ==========================================================================================================
// Exists
// ==========================================================================================================
arr2.includes(2);

// ==========================================================================================================
// Push / Pop
// ==========================================================================================================
arr2.pop();         // Remove element from the end
arr2.push(5, 6, 7); // Add element at the end

// ==========================================================================================================
// Shift, Unshift
// ==========================================================================================================
arr2.shift();       // Remove element from the start
arr2.unshift();     // Add element at the start

// ==========================================================================================================
// Slice
// ==========================================================================================================
arr3 = arr2.slice(1, 3);        // No change in original array

// ==========================================================================================================
// Splice
// ==========================================================================================================
// Arg1: Start Index
// Arg2: Count of delete / replace
// ArgN: Add when Arg2 is 0, otherwise replace
arr3.splice(1, 3);                  // Change in original array
arr3.splice(1, 0, 'A');             // Add 'A', delete nothing 
arr3.splice(0, 1, 'B');             // Replace arr3[0]

// ==========================================================================================================
// Length
// ==========================================================================================================
arr3.length;

// ==========================================================================================================
// Concat
// ==========================================================================================================
arr4 = arr3.concat(arr1);
arr4 = arr4.concat(1, 2, 3);

// ==========================================================================================================
// Iteration
// ==========================================================================================================
arr3.forEach((value, index) => console.log(index, value));

// ==========================================================================================================
// Object to Array
// ==========================================================================================================
let obj1 = { 'x': 1, 'y': 2, 'z': 3 };
arr1 = new Array();
arr1 = Object.entries();

// ==========================================================================================================
// 2D Array
// ==========================================================================================================
let matrix1 = [[1, 2, 3], ['a', 'b', 'c']];
let row0col0 = matrix1[1][1];
matrix1.forEach(row => {
    row.forEach(column => {
        console.log(column);
    });
});

// ==========================================================================================================
// Sort
// ==========================================================================================================
const sorter_ascending = (a, b) => a - b;
const sorter_descending = (a, b) => b - a;
arr1 = [2, 1, 3];
arr1.sort(sorter_ascending);
arr1.sort(sorter_descending);

// ==========================================================================================================
// Map
// ==========================================================================================================
// It applies the given function on each element of list
// Mutliply each element by 2
let arr5 = arr4.map(value => value * 2);

// ==========================================================================================================
// Filter
// ==========================================================================================================
// It applies given function on each element of list to filter the data
// Get even numbers
let arr6 = arr4.filter(value => value % 2 === 0)

// ==========================================================================================================
// String to Array
// ==========================================================================================================
let str1 = 'A, B, C';
arr1 = str1.split(', ');

// ==========================================================================================================
// Array to String
// ==========================================================================================================
str1 = arr1.join(', ');

// ==========================================================================================================
// Every and Some
// ==========================================================================================================
let arr7 = [1, 0, 1, 0];
arr7.every(value => true === value);   // Each element must be true
arr7.some(value => true === value);    // Any element must be true

// ==========================================================================================================
// Index of value
// ==========================================================================================================
arr1.indexOf('A');

// ==========================================================================================================
// Destructuring
// ==========================================================================================================
// https://javascript.info/destructuring-assignment

