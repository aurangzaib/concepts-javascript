// ==========================================================================================================
// Note
// ==========================================================================================================

// - Callback Hell / Pyramid of Doom: Several nested callbacks

// ==========================================================================================================
// Link
// ==========================================================================================================

// - https://www.freecodecamp.org/news/guide-to-javascript-promises/
// - https://javascript.info/async


// ==========================================================================================================
// Callback
// ==========================================================================================================

// ==========================================================================================================
// Callback Hell
// ==========================================================================================================

// ==========================================================================================================
// Promise
// ==========================================================================================================

// Functions Definition
let operation = (resolve, reject) => {
    const num = 99;
    if (num < 100) { resolve(); }
    else { reject(); }
}
let success = () => { console.log("Success"); }
let failure = () => { console.log("Failure"); }

// Promise Definition
const promise = new Promise((resolve, reject) => operation(resolve, reject));

// Promise Handling
promise.then(success, failure);

